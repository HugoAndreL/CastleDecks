// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(CastleDecksContext))]
    [Migration("20230612194233_Item and ItemMonster")]
    partial class ItemandItemMonster
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API.Models.Category", b =>
                {
                    b.Property<int>("Id_Category")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Category"), 1L, 1);

                    b.Property<string>("Name_Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Category");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("API.Models.Item", b =>
                {
                    b.Property<int>("Id_Item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Item"), 1L, 1);

                    b.Property<string>("Desc_Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowFound_Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stats_Item")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Item");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("API.Models.Item_and_Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MonstersId_Monster")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MonstersId_Monster");

                    b.ToTable("ItemMonster");
                });

            modelBuilder.Entity("API.Models.Monsters", b =>
                {
                    b.Property<int>("Id_Monster")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Monster"), 1L, 1);

                    b.Property<int?>("Absorb_Monster")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Desc_Monster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EXP_Monster")
                        .HasColumnType("int");

                    b.Property<int?>("HP_Monster")
                        .HasColumnType("int");

                    b.Property<string>("Img_Monster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Immune_Monster")
                        .HasColumnType("int");

                    b.Property<int?>("LV_Monster")
                        .HasColumnType("int");

                    b.Property<int>("NO_Monster")
                        .HasColumnType("int");

                    b.Property<string>("Name_Monster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Strong_Monster")
                        .HasColumnType("int");

                    b.Property<int?>("Weak_Monster")
                        .HasColumnType("int");

                    b.HasKey("Id_Monster");

                    b.HasIndex("CategoryId");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("API.Models.Weapons", b =>
                {
                    b.Property<int>("Id_Weapon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Weapon"), 1L, 1);

                    b.Property<string>("Description_Weapon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Find_Weapon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Img_Weapon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Magic_Weapon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Weapon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status_Weapon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Weapon");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("API.Models.Item_and_Monster", b =>
                {
                    b.HasOne("API.Models.Item", "Item")
                        .WithMany("ItemsMonsters")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Monsters", null)
                        .WithMany("DropItems_Monster")
                        .HasForeignKey("MonstersId_Monster");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("API.Models.Monsters", b =>
                {
                    b.HasOne("API.Models.Category", "Category_Monster")
                        .WithMany("Monsters_Category")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category_Monster");
                });

            modelBuilder.Entity("API.Models.Category", b =>
                {
                    b.Navigation("Monsters_Category");
                });

            modelBuilder.Entity("API.Models.Item", b =>
                {
                    b.Navigation("ItemsMonsters");
                });

            modelBuilder.Entity("API.Models.Monsters", b =>
                {
                    b.Navigation("DropItems_Monster");
                });
#pragma warning restore 612, 618
        }
    }
}
